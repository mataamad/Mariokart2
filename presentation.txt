The aim of this project was to provide a high level API for control of the electrical department go-karts so that in the future students will have a platform for computer vision research work.  In previous years a big problem for computer vision projects has been getting vehicle hardware running, so giving them a viable platform will remove this wasted time and allow them to do interesting computer vision stuff.
this project was started as a group project last year and was originally intended to be a group project again, but I took it on as a solo project.

So one of the main ideas for this project is that it can be quickly attached to and removed from the go-karts so all the control is done in such a way that it can be easily removed.
This board controls the brake - it controls an actuator which depresses and releases the brake pedal. There is an inbuilt potentiometer in the actuator that gives position feedback.
This board controls the steering, it turns a motor to turn the steering wheel, with relative position feedback via an encoder.
This is the sensor board, at the moment it only provides speed data using an inductive sensor, but more sensors could be added in the future
This board controls the motor current, and does it by talking to a modified go kart control board via SPI.  It performs closed loop speed control by getting the kart speed from the sensor board.
This is the comms board, it handles the startup of all the boards, and also sends and receives data from the laptop computer which controls everything via USB.


Ok.
So first I'll show you it working:
{do tests of each of them, showing them work}


OK.
so there were 5 main parts to this project.
The first was rebuilding the hardware from last year and figuring out what worked.  Almost none of the software did, but the hardware(excluding the motor drivers) seemed pretty solid apart from a few problems.
The second was getting all the boards working individually with their peripherals.  For example on the steering board I had to get the PWM working, the position encoder working, and then proportional position control working - it was a similar story for all the other boards.
The next step was getting CANBUS communications working between all the boards, and transitions from the startup state to the running state.
The next step was getting USB control working and writing the high level API for the program.
The final step was taking all the boards and setting them up and testing them on the kart.  I decided that it'd be better to spend my time improving the code and documentation around the project then testing it on the kart.


talk about?
code
documentation
what did I do? what did they do? (also did student board)

onto next?
